load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")
load("@rules_ecsact//ecsact:toolchain.bzl", "ecsact_toolchain")
load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")
load("//bazel/tools:cc_stamp_header.bzl", "cc_stamp_header")
load("//bazel:copts.bzl", "copts")

package(default_visibility = ["//:__subpackages__"])

bool_flag(name = "use_sdk_version", build_setting_default = False)
config_setting(name = "use_sdk_version_enabled", flag_values = {":use_sdk_version": "true"})
config_setting(name = "use_sdk_version_disabled", flag_values = {":use_sdk_version": "false"})

cc_stamp_header(
    name = "bazel_stamp_header",
    out = "bazel_stamp_header.hh",
)

cc_library(
    name = "cli_json_report",
    copts = copts,
    hdrs = ["ecsact/cli/detail/json_report.hh"],
    srcs = ["ecsact/cli/detail/json_report.cc"],
    deps = [
        ":cli_report_message",
        "@nlohmann_json//:json",
    ],
)

cc_library(
    name = "cli_text_report",
    copts = copts,
    hdrs = ["ecsact/cli/detail/text_report.hh"],
    srcs = ["ecsact/cli/detail/text_report.cc"],
    deps = [
        ":cli_report_message",
    ],
)

cc_library(
    name = "cli_report_message",
    copts = copts,
    hdrs = ["ecsact/cli/report_message.hh"],
)

cc_library(
    name = "cli_report",
    copts = copts,
    hdrs = ["ecsact/cli/report.hh"],
    srcs = ["ecsact/cli/report.cc"],
    deps = [
        ":cli_report_message",
    ],
)

cc_binary(
    name = "ecsact",
    visibility = ["//visibility:public"],
    srcs = [
        "ecsact_cli.cc",
        "bazel_stamp_header.hh",
    ],
    defines = select({
        ":use_sdk_version_enabled": ["ECSACT_CLI_USE_SDK_VERSION"],
        ":use_sdk_version_disabled": [],
    }),
    copts = copts,
    stamp = 1,
    deps = [
        # "//commands:benchmark",
        "//commands:codegen",
        "//commands:command",
        "//commands:config",
        "//commands:build",
    ],
)

alias(
    name = "ecsact_cli",
    visibility = ["//visibility:public"],
    actual = ":ecsact",
)

ecsact_toolchain(
    name = "ecsact_toolchain",
    visibility = ["//visibility:public"],
    target_tool = ":ecsact",
)

toolchain(
    name = "toolchain",
    visibility = ["//visibility:public"],
    toolchain = ":ecsact_toolchain",
    toolchain_type = "@rules_ecsact//ecsact:toolchain_type",
)
